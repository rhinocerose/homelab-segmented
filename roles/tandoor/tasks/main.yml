---
- name: Create tandoor postgres user
  community.general.postgresql_user:
    login_host: "{{ tandoor_postgres_host }}"
    login_password: "{{ postgres_password }}"

    name: tandoor
    state: present
    password: "{{ postgres_password }}"

- name: Create tandoor postgres database
  community.general.postgresql_db:
    login_host: "{{ tandoor_postgres_host }}"
    login_password: "{{ postgres_password }}"

    name: tandoor
    state: present
    owner: tandoor

- name: Create tandoor network
  community.docker.docker_network:
    name: tandoor
    state: present

- name: Create tandoor static volume
  community.docker.docker_volume:
    name: tandoor-static
    state: present

- name: Create tandoor-media volume
  community.docker.docker_volume:
    name: tandoor-media
    state: present

- name: Create tandoor directory
  become: true
  file:
    path: "{{ tandoor_config_directory }}"
    state: directory
    owner: root
    group: root

- name: Create tandoor nginx config
  become: true
  copy:
    dest: /etc/tandoor/Recipes.nginx.conf
    # Based on the default Recipes.conf file, required because of the changed container name
    content: |
      server {
        listen 80;
        server_name localhost;
        client_max_body_size 128M;
        # serve media files
        location /media/ {
          alias /media/;
        }
        # pass requests for dynamic content to gunicorn
        location / {
          proxy_set_header Host $http_host;
          proxy_pass http://tandoor:{{ tandoor_port_http }};
        }
      }
- name: Create tandoor backend container
  community.docker.docker_container:
    name: tandoor
    image: "{{ tandoor_container_store }}/{{ tandoor_container_store }}:{{ tandoor_version }}"
    state: started
    container_default_behavior: compatibility
    comparisons:
      "*": strict
    env:
      SECRET_KEY: "{{ tandoor_secret_key }}"
      ALLOWED_HOSTS: "*"

      DB_ENGINE: "{{ tandoor_postgres_db_engine }}"
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      POSTGRES_USER: tandoor
      POSTGRES_PASSWORD: "{{ postgres_password }}"
      POSTGRES_DB: tandoor

      FRACTION_PREF_DEFAULT: "1"
      COMMENT_PREF_DEFAULT: "0"
    network_mode: tandoor
    networks:
    - name: tandoor
    - name: postgres
    purge_networks: yes
    mounts:
    - source: tandoor-static
      target: "{{tandoor_config_directory}}/staticfiles"
    - source: tandoor-media
      target: "{{tandoor_config_directory}}/mediafiles"
    restart_policy: unless-stopped

# TODO can we serve directly from traefik instead?
- name: Create tandoor frontend container
  community.docker.docker_container:
    name: tandoor-frontend
    image: nginx
    state: started
    container_default_behavior: compatibility
    comparisons:
      "*": strict
      labels: allow_more_present
    mounts:
    - source: tandoor-static
      target: /static
    - source: tandoor-media
      target: /media
    - source: /etc/tandoor/Recipes.nginx.conf
      target: /etc/nginx/conf.d/Recipes.conf
      type: bind
      read_only: true
    # labels:
    #   traefik.enable: "true"
    #   traefik.http.routers.recipes.entrypoints: websecure
    #   traefik.http.routers.recipes.rule: Host(`recipes.rogryza.me`)
    #   traefik.http.routers.recipes.tls: "true"
    #   traefik.http.routers.recipes.tls.certresolver: lets-encrypt
    network_mode: web
    networks:
    - name: web
    - name: tandoor
    purge_networks: yes
    restart_policy: unless-stopped
